{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormControl.js","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","hoc/withAuthRedirect.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/Profile.module.css","assets/images/antPortrait.jpg","assets/images/booleanPhotoTrue.png","assets/images/booleanPhotoFalse.png","components/Profile/MyPosts/Post/MyPost.module.css","components/Profile/ProfileInfo/ProfileUserIdAndPhoto.jsx","components/Profile/ProfileInfo/ProfileBgcPhoto.jsx","components/Profile/ProfileInfo/ProfileAvatar.jsx","components/Profile/ProfileInfo/ProfileJob.jsx","components/Profile/ProfileInfo/ProfileContacts.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileNameAndStatus.jsx","components/Profile/ProfileInfo/ProfileData.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/MyPost.jsx","components/Profile/MyPosts/PostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","props","hasAnError","className","formsCSS","form_control","children","Textarea","restProps","child","Input","InputCheckbox","inputRememberValue","value","inputCheckbox","not_remember","remember","createField","type","placeholder","name","validators","component","Field","validate","requiredField","maxLengthCreator","maxLength","length","minLengthCreator","minLength","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","ProfileUserIdAndPhoto","profile","userId","photosLarge","photos","large","photosSmall","small","PhotoLink","sing","size","profInfoCSS","info","info_data","href","target","rel","ProfileBgcPhoto","profile_block","bgc_photo","src","alt","ProfileAvatar","isOwner","savePhoto","avatar_block","avatar","antPortrait","onChange","event","files","ProfileJob","lookingForAJob","lookingForAJobDescription","booleanPhotoTrue","booleanPhotoFalse","booleanPhoto","Contact","contactTitle","contactValue","ProfileContacts","facebook","contacts","website","vk","twitter","instagram","youtube","github","mainLink","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","status_cont","onDoubleClick","currentTarget","autoFocus","onBlur","updateStatus","ProfileNameAndStatus","aboutMe","info_name","fullName","status_block","ProfileData","buttonEdit","onClick","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","onSubmit","form_error","ProfileInfo","saveProfile","Preloader","profile_description","info_main_block","info_block","initialValues","formData","console","log","promise","then","catch","Post","postCSS","item","item_img_message","url","message","likesCount","dislikesCount","maxPostLength","minPostLength","AddPostFormRedux","cols","postsCSS","post_button","MyPosts","memo","postsElements","posts","reverse","map","post","key","id","my_posts_main","my_posts_label","textarea","values","addPost","newPostText","posts_block","MyPostsContainer","profilePage","dispatch","Profile","profileCSS","ProfileContainer","match","authorizedUserId","history","getUserProfile","getStatus","params","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/4.8a83a38c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_block\":\"ProfileInfo_profile_block__2US6M\",\"profile_description\":\"ProfileInfo_profile_description__WBYsq\",\"bgc_photo\":\"ProfileInfo_bgc_photo__4iBgH\",\"bgc_photo_div\":\"ProfileInfo_bgc_photo_div__2HfT8\",\"avatar\":\"ProfileInfo_avatar__1K2-S\",\"avatar_block\":\"ProfileInfo_avatar_block__2qm90\",\"name\":\"ProfileInfo_name__1CzyD\",\"status_block\":\"ProfileInfo_status_block__3cAJi\",\"status\":\"ProfileInfo_status__3tbxJ\",\"status_cont\":\"ProfileInfo_status_cont__2MwYA\",\"info_main\":\"ProfileInfo_info_main__30G7q\",\"info\":\"ProfileInfo_info__29xT7\",\"info_name\":\"ProfileInfo_info_name__3chjZ\",\"info_data\":\"ProfileInfo_info_data__22okg\",\"info_main_block\":\"ProfileInfo_info_main_block__bKV_7\",\"info_block\":\"ProfileInfo_info_block__2IMtq\",\"booleanPhoto\":\"ProfileInfo_booleanPhoto__3Wayr\",\"maxLength\":\"ProfileInfo_maxLength__GN5d_\",\"buttonEdit\":\"ProfileInfo_buttonEdit__YkTS0\",\"form\":\"ProfileInfo_form__2tCU-\",\"form_error\":\"ProfileInfo_form_error__PO3fg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_control\":\"FormsControls_form_control__36sjN\",\"error\":\"FormsControls_error__ydhXo\",\"inputCheckbox\":\"FormsControls_inputCheckbox__3mb_B\",\"not_remember\":\"FormsControls_not_remember__E7_A2\",\"remember\":\"FormsControls_remember__3KlIS\"};","import React from \"react\";\r\nimport formsCSS from \"./FormsControls.module.css\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasAnError = touched && error;\r\n    return <>\r\n        <div className={formsCSS.form_control}>\r\n            <div className={(hasAnError ? formsCSS.error : '')}>\r\n                {props.children}\r\n            </div>\r\n            {hasAnError && <span> {error}</span>}\r\n        </div>\r\n    </>\r\n}\r\nexport default FormControl;\r\n","import React from \"react\";\r\nimport formsCSS from \"./FormsControls.module.css\";\r\nimport FormControl from \"./FormControl\";\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const InputCheckbox = ({input, meta, ...props}) => {\r\n    const inputRememberValue = !input.value;\r\n    return (\r\n        <div className={formsCSS.inputCheckbox}>\r\n            <input {...input} {...props}/>\r\n            {inputRememberValue && <span className={formsCSS.not_remember}>do not remember</span>}\r\n            {!inputRememberValue && <span className={formsCSS.remember}>remember me =)</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = (type, placeholder, name, validators, component) => (\r\n    <div>\r\n        <Field type={type} name={name} placeholder={placeholder}\r\n               component={component}\r\n               validate={validators}/>\r\n    </div>\r\n)\r\n","export const requiredField = value => {\r\n    if (value) return undefined;\r\n\r\n    return 'Field is required.';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n    if (value && value.length < minLength) return `Min length is ${minLength} symbols`;\r\n\r\n    return undefined;\r\n}\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>;\r\n            return <Component {...this.props}/>;\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"my_posts_main\":\"MyPosts_my_posts_main__1KRmD\",\"my_posts_label\":\"MyPosts_my_posts_label__1fUNR\",\"textarea\":\"MyPosts_textarea__1bSJh\",\"buttons\":\"MyPosts_buttons__3BAtL\",\"button\":\"MyPosts_button__nUIXb\",\"posts_block\":\"MyPosts_posts_block__1XadQ\",\"post_button\":\"MyPosts_post_button__wnMxn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__xIQNq\"};","module.exports = __webpack_public_path__ + \"static/media/antPortrait.540ce7e7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/booleanPhotoTrue.60501b72.png\";","module.exports = __webpack_public_path__ + \"static/media/booleanPhotoFalse.16ccd59a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPost_item__2U1d2\",\"item_img_message\":\"MyPost_item_img_message__1JD3V\"};","import React from 'react';\r\nimport profInfoCSS from './ProfileInfo.module.css';\r\n\r\nexport const ProfileUserIdAndPhoto = ({profile}) => {\r\n    let userId = profile.userId;\r\n    let photosLarge = profile.photos.large;\r\n    let photosSmall = profile.photos.small;\r\n\r\n    const PhotoLink = ({sing, size}) => {\r\n        return <>\r\n            <div className={profInfoCSS.info}>\r\n                {sing}:\r\n                <div className={profInfoCSS.info_data}>\r\n                    <a href={size} target='_blank'\r\n                       rel='noopener noreferrer'>{size ? 'link' : 'no photo'}</a>\r\n                </div>\r\n            </div>\r\n        </>\r\n    }\r\n\r\n    return <>\r\n        <div className={profInfoCSS.info}>\r\n            User ID:\r\n            <div className={profInfoCSS.info_data}>\r\n                <span>{userId}</span>\r\n            </div>\r\n        </div>\r\n        <PhotoLink sing={'Photo large'} size={photosLarge}/>\r\n        <PhotoLink sing={'Photo small'} size={photosSmall}/>\r\n    </>\r\n}\r\n\r\nexport default ProfileUserIdAndPhoto;\r\n","import React from 'react';\r\nimport profInfoCSS from './ProfileInfo.module.css';\r\n\r\nconst ProfileBgcPhoto = () => {\r\n    return <>\r\n        <div className={profInfoCSS.profile_block}>\r\n            <img className={profInfoCSS.bgc_photo}\r\n                 src='/social-network/pic/bgc200.jpg'\r\n                 alt='backgroundPic'/>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default ProfileBgcPhoto;\r\n","import React from 'react';\r\nimport profInfoCSS from './ProfileInfo.module.css';\r\nimport antPortrait from '../../../assets/images/antPortrait.jpg';\r\n\r\nconst ProfileAvatar = ({profile, isOwner, savePhoto}) => {\r\n    const onMainPhotoSelected = (event) => {\r\n        if (event.target.files.length) {\r\n            savePhoto(event.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return <>\r\n        <div className={profInfoCSS.avatar_block}>\r\n            <br/>\r\n            <img className={profInfoCSS.avatar}\r\n                /*src={profile.photos.large\r\n                    ? profile.photos.large\r\n                    : antPortrait}*/\r\n                 src={profile.photos.large\r\n                 || antPortrait}\r\n                 alt='avatar'/>\r\n            <div>{isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}</div>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default ProfileAvatar;\r\n","import React from 'react';\r\nimport profInfoCSS from './ProfileInfo.module.css';\r\nimport booleanPhotoTrue from \"../../../assets/images/booleanPhotoTrue.png\";\r\nimport booleanPhotoFalse from \"../../../assets/images/booleanPhotoFalse.png\";\r\n\r\nconst ProfileJob = ({profile}) => {\r\n    let no = 'no detailed information';\r\n    let lookingForAJob = profile.lookingForAJob;\r\n    let lookingForAJobDescription = profile.lookingForAJobDescription;\r\n\r\n    return <>\r\n        <div className={profInfoCSS.info}>\r\n            Looking for a job:\r\n            <div className={profInfoCSS.info_data}>\r\n                    <span>\r\n                        {lookingForAJob === true ? 'yes' : 'no'}\r\n                        <img\r\n                            src={lookingForAJob === true ? booleanPhotoTrue : booleanPhotoFalse}\r\n                            className={profInfoCSS.booleanPhoto} alt='boolean'/>\r\n                    </span>\r\n            </div>\r\n        </div>\r\n        <div className={profInfoCSS.info}>\r\n            My skills:\r\n            <div className={profInfoCSS.info_data}>\r\n                <span>{lookingForAJobDescription === null ? no : lookingForAJobDescription}</span>\r\n            </div>\r\n        </div>\r\n        <br/>\r\n    </>\r\n}\r\n\r\nexport default ProfileJob;\r\n","import React from 'react';\r\nimport profInfoCSS from './ProfileInfo.module.css';\r\n\r\nconst ProfileContacts = ({profile}) => {\r\n    let facebook = profile.contacts.facebook;\r\n    let website = profile.contacts.website;\r\n    let vk = profile.contacts.vk;\r\n    let twitter = profile.contacts.twitter;\r\n    let instagram = profile.contacts.instagram;\r\n    let youtube = profile.contacts.youtube;\r\n    let github = profile.contacts.github;\r\n    let mainLink = profile.contacts.mainLink\r\n\r\n    return <>\r\n        <br/>\r\n        <Contact contactTitle={'FB'} contactValue={facebook}/>\r\n        <Contact contactTitle={'WebSite'} contactValue={website}/>\r\n        <Contact contactTitle={'VK'} contactValue={vk}/>\r\n        <Contact contactTitle={'Twitter'} contactValue={twitter}/>\r\n        <Contact contactTitle={'Instagram'} contactValue={instagram}/>\r\n        <Contact contactTitle={'YouTube'} contactValue={youtube}/>\r\n        <Contact contactTitle={'GitHub'} contactValue={github}/>\r\n        <Contact contactTitle={'Main Link'} contactValue={mainLink}/>\r\n        <br/>\r\n    </>\r\n}\r\n\r\nexport const Contact = ({contactTitle, contactValue}) => {\r\n    let no = 'no detailed information';\r\n\r\n    return <>\r\n        <div className={profInfoCSS.info}>\r\n            {contactTitle}:\r\n            <span className={profInfoCSS.info_data}>{contactValue === null ? no : contactValue}</span>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default ProfileContacts;\r\n","import React, {useEffect, useState} from 'react';\r\nimport profInfoCSS from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (event) => {\r\n        setStatus(event.currentTarget.value);\r\n    };\r\n\r\n    return <>\r\n        <div className={profInfoCSS.status}>My status:</div>\r\n        <div className={profInfoCSS.status_cont}>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>\r\n                      {props.status === '' || null ? 'no status' : props.status}\r\n                </span>\r\n            </div>}\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true}\r\n                       onBlur={deactivateEditMode} type=\"text\"\r\n                       value={status}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport profInfoCSS from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport {Contact} from \"./ProfileContacts\";\r\n\r\nconst ProfileNameAndStatus = ({profile, status, updateStatus}) => {\r\n    let no = 'no detailed information';\r\n    let aboutMe = profile.aboutMe;\r\n\r\n    return <>\r\n        <div className={profInfoCSS.name}>\r\n            <div className={profInfoCSS.info_name}>\r\n                Full name:\r\n                <div className={profInfoCSS.info_data}>\r\n                    <span>{profile.fullName === null ? no : profile.fullName}</span>\r\n                </div>\r\n            </div>\r\n            <div className={profInfoCSS.status_block}>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n            <Contact contactTitle={'About me'} contactValue={aboutMe}/>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default ProfileNameAndStatus;\r\n","import React from 'react';\r\nimport profInfoCSS from './ProfileInfo.module.css';\r\nimport ProfileJob from \"./ProfileJob\";\r\nimport ProfileContacts from \"./ProfileContacts\";\r\nimport ProfileNameAndStatus from \"./ProfileNameAndStatus\";\r\n\r\nconst ProfileData = ({profile, isOwner, setEditMode, status, updateStatus}) => {\r\n    return <>\r\n        {isOwner && <div>\r\n            <button className={profInfoCSS.buttonEdit} onClick={() => {\r\n                setEditMode(true);\r\n            }}>\r\n                edit\r\n            </button>\r\n        </div>}\r\n        <ProfileNameAndStatus profile={profile}\r\n                              status={status}\r\n                              updateStatus={updateStatus}\r\n                              isOwner={isOwner}\r\n                              setEditMode={setEditMode}/>\r\n        <ProfileContacts profile={profile}/>\r\n        <ProfileJob profile={profile}/>\r\n    </>\r\n}\r\n\r\nexport default ProfileData;\r\n","import React from 'react';\r\nimport profInfoCSS from \"./ProfileInfo.module.css\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileDataForm = ({isOwner, status, updateStatus, handleSubmit, error, profile}) => {\r\n    return <form onSubmit={handleSubmit} className={profInfoCSS.form}>\r\n        {!isOwner && <div>\r\n            <button className={profInfoCSS.buttonEdit}>\r\n                save\r\n            </button>\r\n            {error && <div className={profInfoCSS.form_error}>{error}</div>}\r\n        </div>}\r\n        <div className={profInfoCSS.name}>\r\n            <div className={profInfoCSS.info_name}>\r\n                Full name:\r\n                <div className={profInfoCSS.info_data}>\r\n                    <span>{createField('text', 'Full name', 'fullName', [], Input)}</span>\r\n                </div>\r\n            </div>\r\n            <div className={profInfoCSS.status_block}>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n            <Contact contactTitle={'About me'} contactValue={createField('text', 'About me', 'aboutMe', [], Input)}/>\r\n        </div>\r\n        <br/>\r\n        <div>\r\n            <Contact contactTitle={'FB'}\r\n                     contactValue={createField('text', 'Facebook', 'contacts.facebook', [], Input)}/>\r\n            <Contact contactTitle={'WebSite'}\r\n                     contactValue={createField('text', 'WebSite', 'contacts.website', [], Input)}/>\r\n            <Contact contactTitle={'VK'} contactValue={createField('text', 'VK', 'contacts.vk', [], Input)}/>\r\n            <Contact contactTitle={'Twitter'}\r\n                     contactValue={createField('text', 'Twitter', 'contacts.twitter', [], Input)}/>\r\n            <Contact contactTitle={'Instagram'}\r\n                     contactValue={createField('text', 'Instagram', 'contacts.instagram', [], Input)}/>\r\n            <Contact contactTitle={'YouTube'}\r\n                     contactValue={createField('text', 'YouTube', 'contacts.youtube', [], Input)}/>\r\n            <Contact contactTitle={'GitHub'}\r\n                     contactValue={createField('text', 'GitHub', 'contacts.github', [], Input)}/>\r\n            <Contact contactTitle={'Main Link'}\r\n                     contactValue={createField('text', 'Main Link', 'contacts.mainLink', [], Input)}/>\r\n        </div>\r\n        <br/>\r\n        <div className={profInfoCSS.info}>\r\n            Looking for a job:\r\n            <div className={profInfoCSS.info_data}>\r\n                    <span>\r\n                        {createField('checkbox', '', 'lookingForAJob', [], Input)}\r\n                    </span>\r\n            </div>\r\n        </div>\r\n        <div className={profInfoCSS.info}>\r\n            My skills:\r\n            <div className={profInfoCSS.info_data}>\r\n                <span>{createField('text', 'My skills', 'lookingForAJobDescription', [], Textarea)}</span>\r\n            </div>\r\n        </div>\r\n        <br/>\r\n    </form>\r\n}\r\n\r\nexport const Contact = ({contactTitle, contactValue}) => {\r\n    let no = 'no detailed information';\r\n\r\n    return <>\r\n        <div className={profInfoCSS.info}>\r\n            {contactTitle}:\r\n            <span className={profInfoCSS.info_data}>{contactValue === null ? no : contactValue}</span>\r\n        </div>\r\n    </>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\nexport default ProfileDataFormReduxForm;\r\n","import React, {useState} from 'react';\r\nimport profInfoCSS from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileUserIdAndPhoto from \"./ProfileUserIdAndPhoto\";\r\nimport ProfileBgcPhoto from \"./ProfileBgcPhoto\";\r\nimport ProfileAvatar from \"./ProfileAvatar\";\r\nimport ProfileData from \"./ProfileData\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData);\r\n        let promise = saveProfile(formData);\r\n        promise.then(() => {\r\n            setEditMode(false);\r\n        })\r\n        promise.catch(() => {\r\n            setEditMode(true);\r\n        })\r\n    }\r\n\r\n    return <>\r\n        <div className={profInfoCSS.profile_block}>\r\n            <ProfileBgcPhoto/>\r\n            <div className={profInfoCSS.profile_description}>\r\n                <ProfileAvatar profile={profile} isOwner={isOwner} savePhoto={savePhoto}/>\r\n                <div className={profInfoCSS.info_main_block}>\r\n                    <div className={profInfoCSS.info_block}>\r\n                        {editMode\r\n                            ? <ProfileDataForm initialValues={profile}\r\n                                               profile={profile}\r\n                                               status={status}\r\n                                               updateStatus={updateStatus}\r\n                                               onSubmit={onSubmit}/>\r\n                            : <ProfileData profile={profile}\r\n                                           isOwner={isOwner}\r\n                                           setEditMode={setEditMode}\r\n                                           status={status}\r\n                                           updateStatus={updateStatus}/>\r\n                        }\r\n                        <ProfileUserIdAndPhoto profile={profile}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport postCSS from './MyPost.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={postCSS.item}>\r\n            <div className={postCSS.item_img_message}>\r\n                <img src={props.url}\r\n                     alt=\"post_pic\"/>\r\n                <span>\r\n                    {props.message}\r\n                </span>\r\n            </div>\r\n            <div>\r\n                <span>\r\n                    Likes {props.likesCount}_/_\r\n                </span>\r\n                <span>\r\n                        Dislikes {props.dislikesCount}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport postsCSS from './MyPosts.module.css';\r\nimport {\r\n    maxLengthCreator,\r\n    minLengthCreator,\r\n    requiredField\r\n} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxPostLength = maxLengthCreator(10);\r\nconst minPostLength = minLengthCreator(2);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea}\r\n                   name='newPostText'\r\n                   placeholder='Enter your post message'\r\n                   cols='28'\r\n                   validate={[requiredField, maxPostLength, minPostLength]}\r\n            />\r\n            <br/>\r\n            <button className={postsCSS.post_button}>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: 'profileAddPostForm'})(AddPostForm);\r\n\r\nexport default AddPostFormRedux;\r\n","import React from 'react';\r\nimport postsCSS from './MyPosts.module.css';\r\nimport Post from \"./Post/MyPost\";\r\nimport AddPostFormRedux from \"./PostForm\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = [...props.posts]\r\n        .reverse()\r\n        .map(post =>\r\n            <Post message={post.message}\r\n                  likesCount={post.likesCount}\r\n                  dislikesCount={post.dislikesCount}\r\n                  url={post.url}\r\n                  key={post.id}\r\n            />\r\n        );\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n        values.newPostText = '';\r\n        if (values.newPostText === '') values.newPostText = 'Empty post';\r\n    }\r\n\r\n    return (\r\n        <div className={postsCSS.my_posts_main}>\r\n            <div className={postsCSS.my_posts_label}>\r\n                <h3>MY POSTS</h3>\r\n            </div>\r\n            <div className={postsCSS.textarea}>\r\n                <AddPostFormRedux onSubmit={addNewPost}/>\r\n            </div>\r\n            <div className={postsCSS.posts_block}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;\r\n","import {addPost} from \"../../../redux/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPost(newPostText))\r\n        },\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport profileCSS from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    return <>\r\n        <div className={profileCSS.profile}>\r\n            <ProfileInfo savePhoto={savePhoto}\r\n                         isOwner={isOwner}\r\n                         profile={profile}\r\n                         status={status}\r\n                         updateStatus={updateStatus}\r\n                         saveProfile={saveProfile}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile} from \"../../redux/profile_reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        const {match, authorizedUserId, history, getUserProfile, getStatus} = this.props;\r\n        let userId = match.params.userId;\r\n        if (!userId) {\r\n            userId = authorizedUserId;\r\n            if (!userId) {\r\n                history.push('/login')\r\n            }\r\n            // userId = 9457;\r\n            // userId = 8245;\r\n        }\r\n        getUserProfile(userId);\r\n        getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {profile, status, updateStatus, savePhoto, saveProfile} = this.props;\r\n        return <Profile\r\n            {...this.props}\r\n            isOwner={!this.props.match.params.userId}\r\n            profile={profile}\r\n            status={status}\r\n            updateStatus={updateStatus}\r\n            savePhoto={savePhoto}\r\n            saveProfile={saveProfile}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(connect(mapStateToProps,\r\n    {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}), withRouter, withAuthRedirect)(ProfileContainer);\r\n"],"sourceRoot":""}